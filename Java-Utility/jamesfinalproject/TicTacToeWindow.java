/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jamesfinalproject;

import java.util.concurrent.ThreadLocalRandom;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import library.Library;

/**
 *
 * @author James
 */
public class TicTacToeWindow extends javax.swing.JFrame {

    public boolean won;
    public int numberWins;

    /**
     * Creates new form TicTacToeWindow
     */
    
    public TicTacToeWindow() {
        
        initComponents();                                                       //Initializes the GUI components
        
        String[] info = Library.read("t.txt");                                  //Reads the data in the file
        Integer[] wins = new Integer[info.length / 2];                          //Creates an array to store the usernames
        String[] usernames = new String[info.length / 2];                       //Creates an array to store the scores  
        
        for (int i = 0; i < usernames.length; i++) {                            //Organises the information inthe correct arrays
            usernames[i] = info[i * 2];
            wins[i] = Integer.valueOf(info[(i * 2) + 1]);
        }
        
        boolean found = false;                                                  //Tracks if the user is new to this feature
        int location = -1;                                                      //Holds the location of the user's data in the array
        
        for (int i = 0; i < usernames.length; i++) {
            if (usernames[i].equals(Library.username)) {                        //Searches through the usernames array for the user's username
                found = true;                                                   //If found, found is true
                location = i;                                                   //Sets the location equal to i
                break;                                                          //Breaks out of the loop
            }
        }
        
        if (found) {
            gamesWonLabel.setText(String.valueOf(wins[location]));              //If they were found, their number of wins is displayed in the gamesWon label
            
        } else {
            gamesWonLabel.setText("0");                                         //If they were not, initializes their gamesWon to 0
            String[] newContent = {Library.username, "0"};                      //Creates an array for this new data
            Library.write("t.txt", newContent, true);                           //Writes it to the file
        }

        Object[][] toSort = {usernames, wins};                                  //Creates an object array to sort
        toSort = Library.sortHighToLow(toSort, 1);                              //Sorts the arrays based on the number of wins

        firstLabel.setText("1. " + usernames[0] + ", " + wins[0]+" wins");      //This code displays the information for the top 3 users on the leaderboard
        secondLabel.setText("2. " + usernames[1] + ", " + wins[1]+" wins");
        thirdLabel.setText("3. " + usernames[2] + ", " + wins[2]+" wins");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spot1 = new javax.swing.JButton();
        spot2 = new javax.swing.JButton();
        spot3 = new javax.swing.JButton();
        spot4 = new javax.swing.JButton();
        spot5 = new javax.swing.JButton();
        spot6 = new javax.swing.JButton();
        spot7 = new javax.swing.JButton();
        spot8 = new javax.swing.JButton();
        spot9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        gamesWonLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        firstLabel = new javax.swing.JLabel();
        secondLabel = new javax.swing.JLabel();
        thirdLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tic Tac Toe");

        spot1.setText(" ");
        spot1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spot1ActionPerformed(evt);
            }
        });

        spot2.setText(" ");
        spot2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spot2ActionPerformed(evt);
            }
        });

        spot3.setText(" ");
        spot3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spot3ActionPerformed(evt);
            }
        });

        spot4.setText(" ");
        spot4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spot4ActionPerformed(evt);
            }
        });

        spot5.setText(" ");
        spot5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spot5ActionPerformed(evt);
            }
        });

        spot6.setText(" ");
        spot6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spot6ActionPerformed(evt);
            }
        });

        spot7.setText(" ");
        spot7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spot7ActionPerformed(evt);
            }
        });

        spot8.setText(" ");
        spot8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spot8ActionPerformed(evt);
            }
        });

        spot9.setText(" ");
        spot9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spot9ActionPerformed(evt);
            }
        });

        jLabel2.setText("Games Won:");

        gamesWonLabel.setText("jLabel3");

        jLabel4.setText("Leaderboards");

        firstLabel.setText("1.");

        secondLabel.setText("2.");

        thirdLabel.setText("3.");

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(firstLabel)
                            .addComponent(secondLabel)
                            .addComponent(thirdLabel)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gamesWonLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(spot1)
                                        .addGap(18, 18, 18)
                                        .addComponent(spot2)
                                        .addGap(18, 18, 18)
                                        .addComponent(spot3))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(spot4)
                                        .addGap(18, 18, 18)
                                        .addComponent(spot5)
                                        .addGap(18, 18, 18)
                                        .addComponent(spot6))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(spot7)
                                        .addGap(18, 18, 18)
                                        .addComponent(spot8)
                                        .addGap(18, 18, 18)
                                        .addComponent(spot9))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLabel1)))
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spot1)
                    .addComponent(spot2)
                    .addComponent(spot3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spot4)
                    .addComponent(spot5)
                    .addComponent(spot6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spot7)
                    .addComponent(spot8)
                    .addComponent(spot9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(gamesWonLabel))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(firstLabel)
                .addGap(18, 18, 18)
                .addComponent(secondLabel)
                .addGap(18, 18, 18)
                .addComponent(thirdLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:

        this.dispose();

    }//GEN-LAST:event_backButtonActionPerformed

    private void spot1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spot1ActionPerformed
        // TODO add your handling code here:

        if (spot1.getText().equals(" ")) {
            spot1.setText("x");                                                 //If the spot is empty, displays an x
        }
        checkWin();                                                             //Checks if you won
        AI();                                                                   //Gets the AI to go

    }//GEN-LAST:event_spot1ActionPerformed

    private void spot2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spot2ActionPerformed
        // TODO add your handling code here:

        if (spot2.getText().equals(" ")) {
            spot2.setText("x");                                                 //If the spot is empty, displays an x
        }
        checkWin();                                                             //Checks if you won
        AI();                                                                   //Gets the AI to go

    }//GEN-LAST:event_spot2ActionPerformed

    private void spot3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spot3ActionPerformed
        // TODO add your handling code here:

        if (spot3.getText().equals(" ")) {
            spot3.setText("x");                                                 //If the spot is empty, displays an x
        }
        checkWin();                                                             //Checks if you won
        AI();                                                                   //Gets the AI to go

    }//GEN-LAST:event_spot3ActionPerformed

    private void spot4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spot4ActionPerformed
        // TODO add your handling code here:

        if (spot4.getText().equals(" ")) {
            spot4.setText("x");                                                 //If the spot is empty, displays an x
        }
        checkWin();                                                             //Checks if you won
        AI();                                                                   //Gets the AI to go

    }//GEN-LAST:event_spot4ActionPerformed

    private void spot5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spot5ActionPerformed
        // TODO add your handling code here:

        if (spot5.getText().equals(" ")) {
            spot5.setText("x");                                                 //If the spot is empty, displays an x
        }
        checkWin();                                                             //Checks if you won
        AI();                                                                   //Gets the AI to go

    }//GEN-LAST:event_spot5ActionPerformed

    private void spot6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spot6ActionPerformed
        // TODO add your handling code here:

        if (spot6.getText().equals(" ")) {
            spot6.setText("x");                                                 //If the spot is empty, displays an x
        }
        checkWin();                                                             //Checks if you won
        AI();                                                                   //Gets the AI to go

    }//GEN-LAST:event_spot6ActionPerformed

    private void spot7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spot7ActionPerformed
        // TODO add your handling code here:

        if (spot7.getText().equals(" ")) {
            spot7.setText("x");                                                 //If the spot is empty, displays an x
        }
        checkWin();                                                             //Checks if you won
        AI();                                                                   //Gets the AI to go

    }//GEN-LAST:event_spot7ActionPerformed

    private void spot8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spot8ActionPerformed
        // TODO add your handling code here:

        if (spot8.getText().equals(" ")) {
            spot8.setText("x");                                                 //If the spot is empty, displays an x
        }
        checkWin();                                                             //Checks if you won
        AI();                                                                   //Gets the AI to go

    }//GEN-LAST:event_spot8ActionPerformed

    private void spot9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spot9ActionPerformed
        // TODO add your handling code here:

        if (spot9.getText().equals(" ")) {
            spot9.setText("x");                                                 //If the spot is empty, displays an x
        }
        checkWin();                                                             //Checks if you won
        AI();                                                                   //Gets the AI to go

    }//GEN-LAST:event_spot9ActionPerformed

    public void checkWin() {
        
        String wonBy = "";                                                           //Tracks who won
        
            //This code checks for every possible win scenario for the user, and if it finds a win, it makes won = true and wonBy = user
        
        if ((spot1.getText().equals(spot2.getText())) && (spot3.getText().equals(spot2.getText())) && (spot2.getText().equals("x"))) {
            won = true;
            wonBy = "user";
        } else if ((spot4.getText().equals(spot5.getText())) && (spot6.getText().equals(spot5.getText())) && (spot5.getText().equals("x"))) {
            won = true;
            wonBy = "user";
        } else if ((spot7.getText().equals(spot8.getText())) && (spot9.getText().equals(spot8.getText())) && (spot8.getText().equals("x"))) {
            won = true;
            wonBy = "user";
        } else if ((spot1.getText().equals(spot4.getText())) && (spot7.getText().equals(spot4.getText())) && (spot4.getText().equals("x"))) {
            won = true;
            wonBy = "user";
        } else if ((spot2.getText().equals(spot5.getText())) && (spot8.getText().equals(spot5.getText())) && (spot5.getText().equals("x"))) {
            won = true;
            wonBy = "user";
        } else if ((spot3.getText().equals(spot6.getText())) && (spot9.getText().equals(spot6.getText())) && (spot6.getText().equals("x"))) {
            won = true;
            wonBy = "user";
        } else if ((spot1.getText().equals(spot5.getText())) && (spot9.getText().equals(spot5.getText())) && (spot5.getText().equals("x"))) {
            won = true;
            wonBy = "user";
        } else if ((spot3.getText().equals(spot5.getText())) && (spot7.getText().equals(spot5.getText())) && (spot5.getText().equals("x"))) {
            won = true;
            wonBy = "user";
        }
        
            //This code checks for every possible win scenario for the computer, and if it finds a win, it makes won = true and wonBy = AI
        
        if ((spot1.getText().equals(spot2.getText())) && (spot3.getText().equals(spot2.getText())) && (spot2.getText().equals("o"))) {
            won = true;
            wonBy = "AI";
        } else if ((spot4.getText().equals(spot5.getText())) && (spot6.getText().equals(spot5.getText())) && (spot5.getText().equals("o"))) {
            won = true;
            wonBy = "AI";
        } else if ((spot7.getText().equals(spot8.getText())) && (spot9.getText().equals(spot8.getText())) && (spot8.getText().equals("o"))) {
            won = true;
            wonBy = "AI";
        } else if ((spot1.getText().equals(spot4.getText())) && (spot7.getText().equals(spot4.getText())) && (spot4.getText().equals("o"))) {
            won = true;
            wonBy = "AI";
        } else if ((spot2.getText().equals(spot5.getText())) && (spot8.getText().equals(spot5.getText())) && (spot5.getText().equals("o"))) {
            won = true;
            wonBy = "AI";
        } else if ((spot3.getText().equals(spot6.getText())) && (spot9.getText().equals(spot6.getText())) && (spot6.getText().equals("o"))) {
            won = true;
            wonBy = "AI";
        } else if ((spot1.getText().equals(spot5.getText())) && (spot9.getText().equals(spot5.getText())) && (spot5.getText().equals("o"))) {
            won = true;
            wonBy = "AI";
        } else if ((spot3.getText().equals(spot5.getText())) && (spot7.getText().equals(spot5.getText())) && (spot5.getText().equals("o"))) {
            won = true;
            wonBy = "AI";
        }

        if ((won == true)&&(wonBy.equals("user"))) {                            //If the game was won by the user
            
            String[] info = Library.read("t.txt");                              //Reads the file

            Integer[] wins = new Integer[info.length / 2];                      //Creates an array to store the number of games won
            String[] usernames = new String[info.length / 2];                   //Creates an array to store the usernames

            for (int i = 0; i < usernames.length; i++) {                        //Organises the info into the correct arrays
                usernames[i] = info[i * 2];
                wins[i] = Integer.valueOf(info[(i * 2) + 1]);
            }

            for (int i = 0; i < usernames.length; i++) {                        
                if (usernames[i].equalsIgnoreCase(Library.username)) {          //Searches throught the array of usernames
                    wins[i]++;                                                  //Once found, increases their wins by one
                }
            }

            for (int i = 0; i < usernames.length; i++) {                        //Combines both arrays back into one array
                info[i * 2] = usernames[i];
                info[(i * 2) + 1] = String.valueOf(wins[i]);
            }

            Library.write("t.txt", info, false);                                //Writes the updated array to the data file

            TicTacToeWindow ticTacToe = new TicTacToeWindow();                  //Creates a new tic tac toe window
            ticTacToe.setVisible(true);                                         //Makes it visible
            ticTacToe.setLocationRelativeTo(null);                              //Centres the window
            
            this.dispose();                                                     //Closes this window
            
        } else if (wonBy.equals("AI")){                                         //If won by AI:
            
            TicTacToeWindow ticTacToe = new TicTacToeWindow();                  //Creates a new tic tac toe window
            ticTacToe.setVisible(true);                                         //Makes it visible
            ticTacToe.setLocationRelativeTo(null);                              //Centres the window
            
            this.dispose();                                                     //Closes this window
            
        }
    }

    public void AI() {
        
        if (!won) {                                                             //If the game has not been won yet:
            
            int randomInt = ThreadLocalRandom.current().nextInt(0, 9);          //Generates a randon number between 0 and 9 
            javax.swing.JButton[] buttons = {spot1, spot2, spot3, spot4, spot5, spot6, spot7, spot8, spot9}; //Creates an array of all the buttons (spots)

            if (buttons[randomInt].getText().equals(" ")) {                     //If the spot chosen by the AI is empty:
                
                buttons[randomInt].setText("o");                                //Display an "o" on that spot 
                checkWin();                                                     //Check if it won
                
            } else {
                AI();                                                           //If the spot alrady has text, run the AI again
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel firstLabel;
    private javax.swing.JLabel gamesWonLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel secondLabel;
    private javax.swing.JButton spot1;
    private javax.swing.JButton spot2;
    private javax.swing.JButton spot3;
    private javax.swing.JButton spot4;
    private javax.swing.JButton spot5;
    private javax.swing.JButton spot6;
    private javax.swing.JButton spot7;
    private javax.swing.JButton spot8;
    private javax.swing.JButton spot9;
    private javax.swing.JLabel thirdLabel;
    // End of variables declaration//GEN-END:variables
}
